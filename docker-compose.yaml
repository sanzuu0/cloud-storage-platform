version: "3.8"

services:
  ## postgres ##
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: cloud_user
      POSTGRES_PASSWORD: cloud_password
      POSTGRES_DB: cloud_storage
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  ## redis ##
  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend

  ## zookeeper ##
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  ## kafka ##
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - backend

  minio:
    image: minio/minio:latest
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend


  # --- Микросервисы ---
  auth-service:
    build: ./auth-service
    env_file:
      - ./configs/auth.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - backend

  user-service:
    build: ./user-service
    env_file:
      - ./configs/user.env
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - kafka
    networks:
      - backend

  storage-service:
    build: ./storage-service
    env_file:
      - ./configs/storage.env
    ports:
      - "8002:8002"
    depends_on:
      - postgres
      - kafka
      - minio
    networks:
      - backend

  notification-service:
    build: ./notification-service
    env_file:
      - ./configs/notification.env
    depends_on:
      - kafka
    networks:
      - backend

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-service
      - storage-service
    networks:
      - backend


networks:
  backend:

volumes:
  postgres_data:
  minio_data:
